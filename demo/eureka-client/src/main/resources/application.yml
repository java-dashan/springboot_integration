#server:
#  port: 8001
spring:
  application:
    name: eureka-client
#    允许覆盖bean
  main:
    allow-bean-definition-overriding: true
#  cloud:
#    discovery:
#      enabled: false  #禁用client客户端
eureka:
  instance:
##  每隔30秒，向服务中心发送一条续约指令
#    lease-renewal-interval-in-seconds: 30
##  如果60秒内，依然没有收到续约请求，判定服务过期（过期不一定剔除，还有服务自保限制）
#    lease-expiration-duration-in-seconds: 60
  ##    ip-address: http://127.0.0.1:8001
#    instance-id: eureka-client${server.port}
#    prefer-ip-address: true
#    home-page-url: /
  client:
#    fetch-registry: true
    service-url:
      defaultZone: http://localhost:10086/eureka
#management:
#  endpoints:
#    web:
#      exposure:
#        include: refresh,health,info

#  #暴露所有端点 默认是info,health
#  management.endpoints.web.exposure.include=*
#  #修改访问路径  2.0之前默认是/   2.0默认是 /actuator  可以通过这个属性值修改
#  management.endpoints.web.base-path=/monitor
#  #是否启用 health 端点
#  management.endpoint.health.enabled=true
#  #显示健康具体信息  默认不会显示详细信息
#  management.endpoint.health.show-details=always
#  #shutdown端点可以用来远程关闭应用，此端点默认是关闭的，如果使用的话，需要开启
#  #请使用 POST请求
#  management.endpoint.shutdown.enabled = true


# ribbon全局配置
ribbon:
  ConnectTimeout: 1000
  ReadTimeout: 3000

# 指定服务配置，优先级大于全局配置
eureka-client:
  ribbon:
    ConnectTimeout: 1000
    ReadTimeout: 3000
    MaxAutoRetries: 1
    MaxAutoRetriesNextServer: 2
    # 允许所有http操作(get post put delete 等)重试
    OkToRetryOnAllOperations: true


# feign 超时配置大于ribbon 也就是覆盖ribbon
feign:
  client:
    config:
      # 全局
      default:
        connectTimeout: 1000
        readTimeout: 3000
      # 指定eureka-client
      eureka-client:
        ConnectTimeout: 1000
        ReadTimeout: 3000
        MaxAutoRetries: 1
        MaxAutoRetriesNextServer: 2
        # 允许所有http操作(get post put delete 等)重试
        OkToRetryOnAllOperations: true
# 开启 feign hystrix
  hystrix:
    enabled: true

hystrix:
  command:
#    default 为全局配置
    default:
      fallback:
#        默认就是true  false强制关闭
        enabled: true
#        全局超时配置
      execution:
        isolation:
          thread:
#            超时时间
            timeoutInMilliseconds: 2000
#            超时后终止线程
            interruptOnTimeout: true
#            取消时终止线程
            interruptOnFutureCancel: true
        timeout:
          enabled: true
#          指定方法过期时间   方法签名生成规则 Feign.configKey(Test.class,Test.class.getMethod("test",int.class))
    Test#test(int):
        fallback:
          enabled: true
        execution:
          isolation:
            thread:
              timeoutInMilliseconds: 2000
              interruptOnTimeout: true
              interruptOnFutureCancel: true
          timeout:
            enabled: true
