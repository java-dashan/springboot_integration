version: '3'

services:

  zoo1:
    image: hub.c.163.com/library/zookeeper # 镜像
    restart: always # ~G~M~P
    container_name: zoo1
    hostname: zoo1
    ports:
    - 2181:2181
    volumes:
  #  - "./zooConfig/zoo.cfg:/conf/zoo.cfg" # 指定外部配置文件
    - "/disk/docker/zookeeper1/data:/data"
    - "/disk/docker/zookeeper1/datalog:/datalog"
    environment:
      ZOO_MY_ID: 1 # id docker环境搭建配置在这,否则在指定的data文件下创建 myid 文件 并写入值,每台机器不一样
      ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888
    networks:
      kafka_bridge:
        ipv4_address: 172.23.0.11

  zoo2:
    image: hub.c.163.com/library/zookeeper
    restart: always
    container_name: zoo2
    hostname: zoo2
    ports:
    - 2182:2181
    volumes:
 #   - "./zooConfig/zoo.cfg:/conf/zoo.cfg"
    - "/disk/docker/zookeeper2/data:/data"
    - "/disk/docker/zookeeper2/datalog:/datalog"
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888
    networks:
      kafka_bridge:
        ipv4_address: 172.23.0.12

  zoo3:
    image: hub.c.163.com/library/zookeeper
    restart: always
    container_name: zoo3
    hostname: zoo3
    ports:
    - 2183:2181
    volumes:
#    - "./zooConfig/zoo.cfg:/conf/zoo.cfg"
    - "/disk/docker/zookeeper3/data:/data"
    - "/disk/docker/zookeeper3/datalog:/datalog"
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888
    networks:
      kafka_bridge:
        ipv4_address: 172.23.0.13

  kafka1:
    image: wurstmeister/kafka # 镜像名称
    restart: always
    container_name: kafka1
    hostname: kafka1
    ports:
    - 9091:9091
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://172.16.0.41:9092  # 宿主机ip,是kafka注册到zookeeper暴露给外界的的地址
#      KAFKA_ADVERTISED_HOST_NAME: kafka1
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2181,zoo3:2181
 #     KAFKA_ADVERTISED_PORT: 9091
      KAFKA_LISTENERS: PLAINTEXT://:9091     # kafka真正绑定的地址 集群92会冲突 必须区分开来
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
    - /etc/localtime:/etc/localtime
    - "/disk/docker/kafka1/logs:/kafka"
    links:
    - zoo1
    - zoo2
    - zoo3
    networks:
      kafka_bridge:
        ipv4_address: 172.23.0.14

  kafka2:
    image: wurstmeister/kafka
    restart: always
    container_name: kafka2
    hostname: kafka2
    ports:
    - 9092:9092
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://172.16.0.41:9092
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2181,zoo3:2181
      KAFKA_BROKER_ID: 2
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
    - /etc/localtime:/etc/localtime
    - "/disk/docker/kafka2/logs:/kafka"
    links:
    - zoo1
    - zoo2
    - zoo3
    networks:
      kafka_bridge:
        ipv4_address: 172.23.0.15

  kafka3:
    image: wurstmeister/kafka
    restart: always
    container_name: kafka3
    hostname: kafka3
    ports:
    - 9093:9093
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://172.16.0.41:9093  #宿主机ip,是kafka注册到zookeeper暴露给外界的的地址
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2181,zoo3:2181
      KAFKA_BROKER_ID: 3
      KAFKA_LISTENERS: PLAINTEXT://:9093
#      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092  是kafka真正bind的地址
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
    - /etc/localtime:/etc/localtime
    - "/disk/docker/kafka3/logs:/kafka"
    links:
    - zoo1
    - zoo2
    - zoo3
    networks:
      kafka_bridge:
        ipv4_address: 172.23.0.16

  kafka-manager:
    image: hlebalbau/kafka-manager:1.3.3.22
    restart: always
    container_name: kafka-manager
    hostname: kafka-manager
    ports:
    - 9000:9000
    links:
    - kafka1
    - kafka2
    - kafka3
    - zoo1
    - zoo2
    - zoo3
    environment:
      ZK_HOSTS: zoo1:2181,zoo2:2181,zoo3:2181
      KAFKA_BROKERS: kafka1:9091,kafka2:9092,kafka3:9093
      APPLICATION_SECRET: letmein
      KAFKA_MANAGER_AUTH_ENABLED: "true" # ~@~P~L~A
      KAFKA_MANAGER_USERNAME: "admin" # ~T~H~P~M
      KAFKA_MANAGER_PASSWORD: "admin" # ~F| ~A
      KM_ARGS: -Djava.net.preferIPv4Stack=true
    networks:
      kafka_bridge:
        ipv4_address: 172.23.0.17

networks:
  kafka_bridge:
    external:
      name: zookeeper_network #也可以使用自身 kafka_bridge
